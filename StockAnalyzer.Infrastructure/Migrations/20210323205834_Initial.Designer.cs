// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockAnalyzer.Infrastructure.EntityFramework;

namespace StockAnalyzer.Infrastructure.Migrations
{
    [DbContext(typeof(StocksDbContext))]
    [Migration("20210323205834_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StockAnalyzer.Core.StatementAggregate.Balance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AssetsForSale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Capital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Cash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashWithCentralBank")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentBorrowings")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentInvestments")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentLeasing")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentLiabilities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentObligations")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentOtherLiabilities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentReceivables")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentTradePayablesv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DebtSecurities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinAssetsForTrading")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinLiabilitiesForTrading")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Goodwill")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HeldFinancialAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HeldFinancialLiabilities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IntangibleAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Inventory")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InvestInSubsidiaries")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LiabilitiesToBanks")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LiabilitiesToCentralBank")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LiabilitiesToCustomers")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LoansToBanks")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LoansToCustomers")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NonControlProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NoncurrInvestments")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NoncurrentAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NoncurrentBorrowings")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NoncurrentLeasing")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NoncurrentLiabilities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NoncurrentObligations")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NoncurrentOtherLiabilities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NoncurrentReceivables")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NoncurrentTradeLiabilities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NonshareCapital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OtherAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OtherCurrentAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OtherFinAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OtherLiabilities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OtherNoncurrentAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OwnCapital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OwnShares")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Property")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Reckoning")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Reserve")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RetainedReserves")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RevaluationReserves")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RightToUseAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ShareCapital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SharePremium")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubodinatedLiabilities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxLiabilities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCapital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalEquityAndLiabilities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalLiabilities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("YearProfit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Balance");
                });

            modelBuilder.Entity("StockAnalyzer.Core.StatementAggregate.Cashflow", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amortization")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Capex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Dividend")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FCM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinancingCashflow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InvestingCashflow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LeasePayments")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetCashflow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OperatingCashflow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ShareCapitalCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("StockBuyback")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Cashflow");
                });

            modelBuilder.Entity("StockAnalyzer.Core.StatementAggregate.Income", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AdministrationCosts")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AdministrativExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BeforeTaxProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostOfSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscontinuedProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DistributionExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DividendIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EBIT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EBITDA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ExtraordinarProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FeeExpense")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FeeIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinanceCosts")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinanceIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrossProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ImpairmentLosses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InterestIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IntrestExpense")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetFeeExpense")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetGrossProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetIntrestIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetOtherFinIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetOtherOperatingCosts")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetOtherOperatingIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetoperatingProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OtherIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OtherOperatingCosts")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OtherOperatingIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RealisedGains")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RelatedIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Revenues")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ShareholderNetProfit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Income");
                });

            modelBuilder.Entity("StockAnalyzer.Core.StatementAggregate.Period", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Quarter")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Period");
                });

            modelBuilder.Entity("StockAnalyzer.Core.StatementAggregate.Statement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BalanceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CashflowId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IncomeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PeriodId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StockId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BalanceId");

                    b.HasIndex("CashflowId");

                    b.HasIndex("IncomeId");

                    b.HasIndex("PeriodId");

                    b.HasIndex("StockId");

                    b.ToTable("Statement");
                });

            modelBuilder.Entity("StockAnalyzer.Core.StockAggregate.Stock", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ActualPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaxPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OpeningPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Ticker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Turnover")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("UpdateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Volume")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("StockAnalyzer.Core.StockAggregate.StockIndex", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StockId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.ToTable("StockIndex");
                });

            modelBuilder.Entity("StockAnalyzer.Core.StatementAggregate.Statement", b =>
                {
                    b.HasOne("StockAnalyzer.Core.StatementAggregate.Balance", "Balance")
                        .WithMany()
                        .HasForeignKey("BalanceId");

                    b.HasOne("StockAnalyzer.Core.StatementAggregate.Cashflow", "Cashflow")
                        .WithMany()
                        .HasForeignKey("CashflowId");

                    b.HasOne("StockAnalyzer.Core.StatementAggregate.Income", "Income")
                        .WithMany()
                        .HasForeignKey("IncomeId");

                    b.HasOne("StockAnalyzer.Core.StatementAggregate.Period", "Period")
                        .WithMany()
                        .HasForeignKey("PeriodId");

                    b.HasOne("StockAnalyzer.Core.StockAggregate.Stock", null)
                        .WithMany("Statements")
                        .HasForeignKey("StockId");

                    b.Navigation("Balance");

                    b.Navigation("Cashflow");

                    b.Navigation("Income");

                    b.Navigation("Period");
                });

            modelBuilder.Entity("StockAnalyzer.Core.StockAggregate.StockIndex", b =>
                {
                    b.HasOne("StockAnalyzer.Core.StockAggregate.Stock", null)
                        .WithMany("Indexes")
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("StockAnalyzer.Core.StockAggregate.Stock", b =>
                {
                    b.Navigation("Indexes");

                    b.Navigation("Statements");
                });
#pragma warning restore 612, 618
        }
    }
}
